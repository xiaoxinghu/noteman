#!/usr/bin/env ruby

require 'gli'
require 'noteman'

include GLI::App
include Noteman::Display

program_desc 'A CLI note manager.'

desc 'Do the action to all resulting notes.'
switch [:a, :all]

command :test do |c|
  c.action do |global_options,options,args|
    words = ['Hello', 'test', 'as']
    content = "this is as teSt, hello world."
    if words.all? { |word| content.downcase.include? word.downcase }
      puts 'yes'
    else
      puts 'no'
    end
  end
end

desc 'Search for notes.'
arg_name 'keywords'
command :find do |c|
  c.desc 'Search by fomula.'
  c.flag [:f, :fomula]

  c.desc 'Search by tags.'
  c.flag [:t, :tags]

  c.action do |global_options,options,args|
    nm = Noteman::NoteManager.new
    nm.search
    if options[:fomula]
      nm.search_by_fomular options[:fomula].result
    elsif options[:tags]
      nm.by_tags(options[:tags].split(','))
    end

    if args.length > 0
      nm.by_keywords args
    end
    nm.view_result
  end
end

desc 'List all tags.'
command :tags do |c|
  c.desc 'List results one per line, to assist with shell completion.'
  c.switch [:c]

  c.action do |global_options,options,args|
    nm = Noteman::NoteManager.new
    if options[:c]
      nm.tags.keys.each { |tag| puts tag }
    else
      output_tags nm.tags
    end
  end
end

desc 'Capture new note.'
arg_name 'note'
command :new do |c|
  c.desc 'Insert link.'
  c.flag [:l, :link]

  c.action do |global_options,options,args|
    nm = Noteman::NoteManager.new
    if args.length > 0
      nm.capture(args.join(' '), options[:link])
    else
      input = nm.fork_editor
      nm.capture input
    end
  end
end

exit run(ARGV)
